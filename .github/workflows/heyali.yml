name: WorkFlow

# my trigger
on:
  push:
    branches:
    # - 'release/v[0-9]+.[0-9]+'
      master

jobs:
  # add comments to verify the commit check funciton
  Check_Commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Get Latest Commit Message
        id: commit_message
        run: |
            echo "::set-output name=commit_message=$(git log -1 --pretty=%B)"
        
      - name: Exit When NORUN
        if: startsWith(steps.commit_message.outputs.commit_message, '#NORUN')
        run: |
          exit 0

  Scan_Code: 
    runs-on: ubuntu-latest
    outputs:
        output1: ${{ steps.trivy-status.outputs.status }}
    steps:
      - name: Checkout Code
        id: text_output
        uses: actions/checkout@v2
      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'table'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'HIGH'
          output: output.txt 

      - name: Set Trivy Status
        id: trivy-status
        run: |
            if [ -f "output.txt" ]; then
            echo "::set-output name=status::failure"
            else
            echo "::set-output name=status::success"
            fi

    #   - name: Generate text file
    #     run: echo trivy-report.txt > output.txt

      - name: Upload text file
        uses: actions/upload-artifact@v2
        with:
            name: output-file
            path: output.txt
     
      - name: Get script result
        run: echo "Script result was ${{ steps.trivy-status.outputs.status }}"
   
  Slack_Failed:  
      needs: Scan_Code
      runs-on: ubuntu-latest
      if: needs.Scan_Code.outputs.output1 == 'failure'
      steps:
      - name: Failed Slack Notification 
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: 'Scan failed - He YaLi'
          SLACK_MESSAGE: 'Failed trivy scan, see uploaded report'
          SLACK_COLOR: ${{ needs.Scan_Code.outputs.output1 }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}  
    
      - name: Download text file
        uses: actions/download-artifact@v2
        with:
            name: output-file

      - name: Read text file
        run: cat output.txt

      - name: Slack Upload Trivy
        uses: MeilCli/slack-upload-file@v4
        with:
          slack_token: ${{ secrets.SLACK_TOKEN }}
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          file_path: output.txt
          initial_comment: Scan report by He YaLi
     
  Slack_Success:  
        needs: Scan_Code
        runs-on: ubuntu-latest
        if: needs.Scan_Code.outputs.output1 == 'success'
        steps:
          - name: Install Cosign
            uses: sigstore/cosign-installer@v3.5.0
    
          - name: Set up QEMU
            uses: docker/setup-qemu-action@v3
    
          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3
    
          - name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
    
          - id: docker_meta
            uses: docker/metadata-action@v4.4.0
            with:
              images: ghcr.io/sigstore/sample-honk
              tags: type=sha,format=long
    
          - name: Build and Push container images
            uses: docker/build-push-action@v4.0.0
            id: build-and-push
            with:
              push: true
              tags: charliehe495/go-fortune:${{ github.sha }}

          - name: Sign the images with GitHub OIDC Token
            env:
                DIGEST: ${{ steps.build-and-push.outputs.digest }}
                TAGS: charliehe495/go-fortune:${{ github.sha }}
                COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
                COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
            run: |
                images=""
                for tag in ${TAGS}; do
                    images+="${tag}@${DIGEST} "
                done
                cosign sign --yes ${images}

          - name: Slack Notification When trivy success
            uses: rtCamp/action-slack-notify@v2
            env:
                SLACK_TITLE: 'Image build and signed'
                SLACKIFY_MARKDOWN: 'true'
                SLACK_MESSAGE: 
                    '**Name**: He YaLi \n
                    **Metriculation**: A0291660A \n
                    **Email**: [e1333156@u.nus.edu](e1333156@u.nus.edu) \n
                    **Git**: ${{ github.server_url }}/${{ github.repository }} \n
                    **Image**: [https://hub.docker.com/repository/docker/charliehe495/go-fortune/general](https://hub.docker.com/repository/docker/charliehe495/go-fortune/general)'
                SLACK_COLOR: '${{ needs.Scan_Code.outputs.output1 }}'
                SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}  